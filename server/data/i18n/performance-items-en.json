{
  "items": [
    {
      "id": "lazy-loading",
      "label": "Lazy loading images",
      "description": "loading=\"lazy\" attribute on images",
      "details": {
        "explication": "Lazy loading allows images to be loaded only when they are about to be displayed in the viewport. This significantly improves initial loading times and reduces bandwidth consumption.",
        "commentFaire": [
          "Add loading=\"lazy\" to your <img> tags",
          "Use 'Lighthouse' → Performance to measure impact",
          "Test with 'PageSpeed Insights' to see improvements",
          "Check with 'WebPageTest' to analyze loading"
        ],
        "bonnesPratiques": [
          "Use loading=\"lazy\" for all non-critical images",
          "Avoid lazy loading for above the fold images",
          "Test on different devices and connections",
          "Measure impact on Core Web Vitals",
          "Combine with image optimization"
        ],
        "exemple": {
          "html": "<!-- Image with lazy loading -->\n<img src=\"image.jpg\" alt=\"Description\" loading=\"lazy\" width=\"800\" height=\"600\">\n\n<!-- Critical image (above the fold) without lazy loading -->\n<img src=\"hero-image.jpg\" alt=\"Main image\" width=\"1200\" height=\"400\">",
          "description": "Examples of lazy loading usage for images"
        }
      }
    },
    {
      "id": "image-optimization",
      "label": "Optimized image size",
      "description": "No 4K for an icon",
      "details": {
        "explication": "Images often represent the majority of a web page's weight. Optimizing their size and format can significantly improve loading performance. Use appropriate dimensions and modern formats.",
        "commentFaire": [
          "Use 'TinyPNG' or 'Squoosh' to compress your images",
          "Test with 'ImageOptim' for automatic optimization",
          "Check with 'Lighthouse' → Performance → Image optimization",
          "Analyze with 'WebPageTest' to see image impact"
        ],
        "bonnesPratiques": [
          "Use dimensions appropriate to display",
          "Compress without visible quality loss",
          "Choose the right format (JPEG for photos, PNG for graphics)",
          "Use automatic optimization tools",
          "Test on different devices"
        ],
        "exemple": {
          "html": "<!-- Optimized image -->\n<img src=\"optimized-photo.jpg\" alt=\"Optimized photo\" width=\"800\" height=\"600\">\n\n<!-- Non-optimized image (avoid) -->\n<img src=\"4k-photo.jpg\" alt=\"4K photo\" width=\"800\" height=\"600\">",
          "description": "Examples of optimized vs non-optimized images"
        }
      }
    },
    {
      "id": "modern-formats",
      "label": "Use of modern formats (WebP, AVIF)",
      "description": "Lighter than JPEG/PNG",
      "details": {
        "explication": "Modern formats like WebP and AVIF offer superior compression to traditional formats (JPEG, PNG) while maintaining excellent visual quality. They can reduce image size by 25% to 50%.",
        "commentFaire": [
          "Convert your images with 'Squoosh' or 'Convertio'",
          "Use the <picture> element for compatibility",
          "Test with 'Can I Use' to check browser support",
          "Check with 'Lighthouse' to measure impact"
        ],
        "bonnesPratiques": [
          "Use WebP as primary format",
          "Provide fallbacks for older browsers",
          "Test visual quality after conversion",
          "Measure impact on performance",
          "Use <picture> element for compatibility"
        ],
        "exemple": {
          "html": "<picture>\n  <source srcset=\"image.webp\" type=\"image/webp\">\n  <source srcset=\"image.avif\" type=\"image/avif\">\n  <img src=\"image.jpg\" alt=\"Image with modern formats\">\n</picture>",
          "description": "Example of modern formats usage with fallback"
        }
      }
    },
    {
      "id": "minification",
      "label": "Minified CSS and JS",
      "description": "Compressed files",
      "details": {
        "explication": "Minification removes spaces, comments, and unnecessary characters from CSS and JavaScript files, reducing their size by 20% to 50%. This speeds up downloading and improves performance.",
        "commentFaire": [
          "Use 'Toptal CSS Minifier' for your CSS files",
          "Test with 'JS Minifier' for your JavaScript files",
          "Check with 'Lighthouse' → Performance → Minification",
          "Analyze with 'WebPageTest' to measure impact"
        ],
        "bonnesPratiques": [
          "Minify all CSS and JS files",
          "Keep source files for development",
          "Use automated tools (webpack, gulp)",
          "Check compatibility after minification",
          "Compress with gzip/brotli"
        ],
        "exemple": {
          "avant": "/* Unminified CSS */\n.header {\n  background-color: #ffffff;\n  padding: 20px;\n  margin-bottom: 10px;\n}\n\n.button {\n  color: #000000;\n  font-size: 16px;\n  border: 1px solid #cccccc;\n}",
          "apres": "/* Minified CSS */\n.header{background-color:#fff;padding:20px;margin-bottom:10px}.button{color:#000;font-size:16px;border:1px solid #ccc}",
          "description": "CSS minification example: before and after"
        }
      }
    },
    {
      "id": "gzip-compression",
      "label": "GZIP compression enabled",
      "description": "70% reduction in file size",
      "details": {
        "explication": "GZIP compression significantly reduces the size of files sent to the browser, improving loading times. It's particularly effective for text files (HTML, CSS, JS).",
        "commentFaire": [
          "Check with 'Gzip Test' if compression is enabled",
          "Configure your web server (Apache/Nginx) to enable GZIP",
          "Test with 'GTmetrix' to see impact",
          "Check response headers with developer tools"
        ],
        "bonnesPratiques": [
          "Enable GZIP for all text files",
          "Configure appropriate compression levels",
          "Test impact on performance",
          "Check browser compatibility",
          "Monitor server CPU usage"
        ],
        "exemple": {
          "apache": "# .htaccess\n<IfModule mod_deflate.c>\n  AddOutputFilterByType DEFLATE text/plain\n  AddOutputFilterByType DEFLATE text/html\n  AddOutputFilterByType DEFLATE text/xml\n  AddOutputFilterByType DEFLATE text/css\n  AddOutputFilterByType DEFLATE application/xml\n  AddOutputFilterByType DEFLATE application/xhtml+xml\n  AddOutputFilterByType DEFLATE application/rss+xml\n  AddOutputFilterByType DEFLATE application/javascript\n  AddOutputFilterByType DEFLATE application/x-javascript\n</IfModule>",
          "nginx": "# nginx.conf\ngzip on;\ngzip_vary on;\ngzip_min_length 1024;\ngzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;",
          "description": "GZIP configuration for Apache and Nginx"
        }
      }
    },
    {
      "id": "browser-caching",
      "label": "Browser cache configured",
      "description": "Reduction of repeated requests",
      "details": {
        "explication": "Browser caching allows temporary storage of resources (CSS, JS, images) in the browser, avoiding re-downloading them on each visit. This significantly improves performance.",
        "commentFaire": [
          "Check with 'Cache Checker' if cache is configured",
          "Configure Cache-Control headers on your server",
          "Test with 'GTmetrix' to analyze cache",
          "Check response headers in developer tools"
        ],
        "bonnesPratiques": [
          "Configure appropriate cache durations",
          "Use versioned filenames",
          "Test impact on performance",
          "Check consistency between servers",
          "Monitor cache usage"
        ],
        "exemple": {
          "apache": "# .htaccess\n<IfModule mod_expires.c>\n  ExpiresActive On\n  ExpiresByType text/css \"access plus 1 year\"\n  ExpiresByType application/javascript \"access plus 1 year\"\n  ExpiresByType image/png \"access plus 1 year\"\n  ExpiresByType image/jpg \"access plus 1 year\"\n</IfModule>",
          "nginx": "# nginx.conf\nlocation ~*\\.(css|js|png|jpg|jpeg|gif|ico|svg)$ {\n  expires 1y;\n  add_header Cache-Control \"public, immutable\";\n}",
          "description": "Browser cache configuration for Apache and Nginx"
        }
      }
    },
    {
      "id": "critical-css",
      "label": "Inlined critical CSS",
      "description": "Faster initial rendering",
      "details": {
        "explication": "Critical CSS contains the styles necessary for the initial page rendering. Inlining this CSS in the HTML avoids a network request and improves First Contentful Paint (FCP).",
        "commentFaire": [
          "Identify critical CSS with 'Critical CSS Generator'",
          "Use 'Critical' to automatically extract critical CSS",
          "Test with 'Lighthouse' to see improvement",
          "Check with 'WebPageTest' the impact on performance"
        ],
        "outils": [
          {
            "nom": "Critical CSS Generator",
            "url": "https://www.sitelocity.com/critical-css-generator",
            "description": "Generate critical CSS for your page"
          },
          {
            "nom": "Critical",
            "url": "https://github.com/addyosmani/critical",
            "description": "Automated tool to extract critical CSS"
          },
          {
            "nom": "Lighthouse",
            "url": "https://developers.google.com/web/tools/lighthouse",
            "description": "Test impact on Core Web Vitals"
          }
        ],
        "bonnesPratiques": [
          "Inline only critical CSS",
          "Load non-critical CSS asynchronously",
          "Test on different screen sizes",
          "Monitor HTML size",
          "Optimize regularly"
        ],
        "exemple": {
          "html": "<head>\n  <style>\n    /* Inlined critical CSS */\n    body { margin: 0; font-family: Arial, sans-serif; }\n    .header { background: #fff; padding: 1rem; }\n    .hero { background: #f0f0f0; padding: 2rem; }\n  </style>\n  <link rel=\"preload\" href=\"styles.css\" as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\">\n  <noscript><link rel=\"stylesheet\" href=\"styles.css\"></noscript>\n</head>",
          "description": "Inlined critical CSS with asynchronous loading of non-critical CSS"
        }
      }
    }
  ]
}
